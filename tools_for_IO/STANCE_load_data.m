function Data = STANCE_load_data(fileName,dataDir,gzipFlag,mask)
%%% Spontaneous and Task-related Activation of Neuronally Correlated Events (STANCE) %%%
%STANCE_load_data loads 3D/4D MRI data from fileName in dataDir (optional) 
%
%   NOTE: - if ANALYZE format, fileName should be *.hdr and *.img will be assumed to exist 
%         - can accomodate gziped file formats as well.
%         - optional mask for loading images can be provided.
%
%   Supported filetypes: NIFTI, ANALYZE and gzipped files.
%
%   gzipFlag indicated whether to keep only archived gzipped files (lower 
%   storage cost) or allowing for ungzipped files to remain (faster run times).
%
%   mask is an optional input that is an implicit zero mask for image datatypes
%   without a NaNrep to be used by spm_read_vols
%
% Jason E. Hill
% STANCE_load_data.m      updated     10 DEC 2015


%% Turn off finite warning
warning('off', 'MATLAB:FINITE:obsoleteFunction');
%% Turn off nifti class warning when loading SPM mat files
warning('off', 'MATLAB:unknownElementsNowStruc');
warning('off', 'MATLAB:dispatcher:ShadowedMEXExtension');
warning('off', 'MATLAB:pfileOlderThanMfile');

%% Input argument handling and initialization
if nargin < 4
    mask = [];
end        
if nargin < 3
    gzipFlag = false;
end    
if nargin < 2
    dataDir = [];
end   

if isempty(fileName)
    Volume = STANCE_load_volume;
    if iscell(fileName)
        Volume = {Volume};
    end
           
elseif isstruct(fileName)
    Volume = fileName;
elseif iscell(fileName)
    if nargin < 2 || isempty(dataDir)
       Volume = cellfun(@STANCE_load_data,fileName,'UniformOutput',false);
    else
       Volume = cellfun(@STANCE_load_data,fileName,dataDir,'UniformOutput',false); 
    end
else
    Volume = STANCE_load_volume;
    V = Volume;
    Y = [];
    for i=1:size(fileName,1)
        n  = 0;
        if nargin < 2 || isempty(dataDir)
            v = STANCE_load_header(deblank(fileName(i,:)));            
        else
            v = STANCE_load_header(deblank(fileName(i,:)),dataDir);
        end
        f = fieldnames(v);
        for j=1:numel(f)
            % save header info
            [V(n+1:n+size(v,2),1).(f{j})] = deal(v.(f{j}));
        end
        % extract the volume data and real space locations [mm]
        if isempty(mask)
            Yn = spm_read_vols(v);
        else
            Yn = spm_read_vols(v,mask); 
        end
        if size(v,2)>1 || iscell(Y)
            Y{n+1:n+size(v,2)} = Yn;            
        else
            Y = Yn;        
        end
        n = n + size(v,2);

        %  Remove any files generated by gunzip
        if gzipFlag
            if strcmpi(fileName(end-2:end),'.gz')
                delete(fileName(1:end-3));
            end
        end
    end
    
    Data   = Y;
end

end